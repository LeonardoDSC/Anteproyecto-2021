*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

nav{
    display: flex; /*Coloca los apartados de lado del titulo de nuestra pag*/
    justify-content: space-around;/* Distribuir items uniformemente.  Los items tienen el mismo espacio a su alrededor */
    align-items: center;
    min-height: 8vh;
    background-color: rgb(189, 178, 255);
    font-family: 'Poppins', sans-serif;


}

.Logo{
    color: rgb(241, 250, 238);
    text-transform: uppercase;/*transforma el texto a mayusculas*/
    letter-spacing: 5px;/*espacio entre letras*/
    font-size: 20px;
}

.apartados{
    display: flex;
    justify-content: space-around;
    width: 40%;
}
.apartados li{
    list-style: none;/*para quitar los puntos del texto de los apartados*/
}

.apartados a{
    color: rgb(241, 250, 238);
    text-decoration: none; /*Quitamos lo subrayado*/
    letter-spacing: 3px;
    font-size: 14px;
    font-weight: bold;
}

/* los pseudo-elementos se representan por : o :: y permiten añadir estilos a una parte concreta del documento, en este caso la accion hover sobre los
Ul Li y a del nav. */
nav ul li a:hover{
    color: rgb(255, 214, 165);
}
/*la clase burger la utilizo para el menu en version movil.*/
.burger{
    display: none;
    cursor: pointer;

}
.burger div{
    width: 25px;
    height: 3px;
    color: rgb(241, 250, 238);
    background-color: rgb(241, 250, 238);
    margin: 5px;
    transition: all 0.3s ease; /*Define el tiempo de transicion del elemento.*/
}


/*Animacion para las lineas del burger
Pasan de ser 3 lineas horizontales a formar una X */
.toggle .linea1{
    transform: rotate(-45deg) translate(-5px, 6px);
}
.toggle .linea2{
    opacity: 0;
}
.toggle .linea3{
    transform: rotate(45deg) translate(-5px, -6px);
}

.row{
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 100px 0;
}
.col-1{
    flex-basis: 40%; /*especifica el tamaño unicial del elemento flexible*/
    position: static; /* para que no afecte a los elementos del nav*/
    margin-left: 45px;
    font-family: 'Roboto Slab', serif;

}
.col-1 h3{
    font-size: 35px;
    color: black;

}
.col-1 p{
    justify-content: center;
    margin-left: 5px;
    align-items: center;
    font-size: 15px;

}
button{
    margin-left: 18px;
    width: 180px;
    border: 0px;
    padding: 15px 10px;
    outline: none;
    color: #fff;
    background: linear-gradient(to right, #FFC6FF, #BDB2FF);/*efecto gradient en el boton*/
    transition: 0.5s;
}
button img{
    width: 15px;
    display: none;

}
/*hacemos que cuando pongamos el cursos encima del boton aparezca la imagen colocada*/

button:hover img{
display: block;
}

button:hover{
    width: 160px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
/*columna a la izquierda del texto con efecto gradient*/
.col-1::after{
    content: '';
    width: 10px;
    height: 57%;
    background: linear-gradient(#FFC6FF, #BDB2FF);
    position: absolute;
    left: -40px;
    top: 8px;
}
.col-2{
    position: static;
    flex-basis: 40%;
    display: flex;
    align-items: center;
    border: 0px solid transparent;
    justify-content: center;


}

.col-2 .local{
    width: 90%;
    border-radius: 3%;/*redondeamos los bordes de la imagen */
     
}

@media screen and (max-width: 1024px) {
    .apartados{
        width: 60%;
    }
}
@media screen and (max-width: 768px) {
    head{
        overflow-x: hidden; /*se calcula implicitamente como auto*/
    }

    .apartados{
        position: absolute;
        right: 0px;
        height: 92vh;
        top: 8vh;
        background-color: rgb(189, 178, 255);
        display: flex;
        flex-direction: column;/*especifica cómo colocar los objetos flexibles en el contenedor flexible definiendo el eje principal y la dirección*/
        align-items: center;
        width: 40%;
        transform: translateX(100%);/*para la transicion del menu los reposiciona horizontalmente*/
        transition: transform 0.5s ease-in;
    }
    .apartados li{
        opacity: 0;
    }
    .burger{
        display: block;
    }

    .row{
        flex-direction: column-reverse;
        margin: 50px 0;

    }
    .col-2{
        flex-basis: 100%;
        margin-bottom: 50px;
    }
}
.apartados-act{
    transform: translateX(0%)
}

/*La regla arroba @keyframes permite a los autores controlar los pasos intermedios en una secuencia de animación CSS 
mediante el establecimiento de keyframes (o puntos de trayectoria) a lo largo de la secuencia de animación que debe ser alcanzado por determinados puntos
durante la animación. Esto le da un control más específico sobre los pasos intermedios de la secuencia de animación que se obtiene al dejar que el navegador
maneje todo automáticamente.*/
@keyframes apartadosfade{
    from{
        opacity: 0;
        transform: translateX(50px);
    }
    to{
        opacity: 1;
        transform: translateX(0px);
    }
}